# –ë–æ—Ç –±—É–¥–µ—Ç –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –ø–æ–º–æ—à–Ω–∏–∫–æ–º –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
# –í –ø–ª–∞–Ω–∞—Ö:
'''–ü—Ä–∏ –≤—ã–≤–æ–¥–µ —Ç–æ–ø 10 –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –∏ ,–µ—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞ –∫–∞–∫–æ–π-—Ç–æ –∏–∑ —ç—Ç–∏—Ö –≥–æ—Ä–æ–¥–æ–≤ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –≤ —Å—Å—ã–ª–∫–µ –ø–æ–¥ —ç—Ç–∏–º –≥–æ—Ä–æ–¥–æ–º –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç'''
import telebot
import random
from telebot import types
from cities import variants, top10
from API import bot_tg_API

bot: telebot.TeleBot = telebot.TeleBot(bot_tg_API)


# –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤—ã–≤–æ–¥ –∏–Ω—Ñ—ã
@bot.message_handler(commands=['inf'])
def main(message):
    bot.send_message(message.chat.id, message)


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ START
@bot.message_handler(commands=['start'])
def start(message: types.Message):
    if message.from_user.last_name is not None and message.from_user.first_name is not None:
        bot.send_message(message.chat.id,
                         f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name} {message.from_user.last_name}! \n–ß—Ç–æ–±—ã '
                         f'–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ ">" –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ —Å–ø–∏—Å–∫–∞ "–ú–µ–Ω—é"',
                         reply_markup=next_button())
    elif message.from_user.last_name is None and message.from_user.first_name is not None:
        bot.send_message(message.chat.id,
                         f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.first_name}! \n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞–∂–º–∏—Ç–µ ">" –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ '
                         f'–∫–æ–º–∞–Ω–¥—É –∏–∑ —Å–ø–∏—Å–∫–∞ "–ú–µ–Ω—é"',
                         reply_markup=next_button())

def next_button() -> types.InlineKeyboardMarkup:
    markup = types.InlineKeyboardMarkup(row_width=1)
    next = types.InlineKeyboardButton('‚Üí', callback_data='next')
    markup.add(next)
    return markup
#‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì
def next_choose(call: types.CallbackQuery):
    if call.data == next_button():
        print('True')# –ø–µ—Ä–µ—Ö–æ–¥ –∫ choose
        markup = types.InlineKeyboardMarkup(row_width=1)
        next = types.InlineKeyboardButton(next_button(), callback_data='next')
        markup.add(next)
        bot.send_message(call.message.chat.id, 'Next', reply_markup=markup)


# # --------------------------------------------------------------------------------------------------------------------

# –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏–∏ –∫–Ω–æ–ø–∫–∏ "CHOOSE"
@bot.message_handler(commands=['choose'])
def button(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    rand_route = types.InlineKeyboardButton('–°–ª—É—á–∞–π–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç', callback_data='rand_route')
    top10m = types.InlineKeyboardButton('–¢–æ–ø 10 –º–∞—Ä—à—Ä—É—Ç–æ–≤', callback_data='top10m')
    next1 = types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä –º–∞—Ä—à—Ä—É—Ç–∞', callback_data='next1')
    markup.add(rand_route, top10m, next1)
    # –¢–µ–∫—Å—Ç, –≤—ã–≤–æ–¥–∏–º—ã–π –Ω–∞–¥ –∫–Ω–æ–ø–∫–∞–º–∏
    bot.send_message(message.chat.id, "–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ - –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!üôÇ\n"
                                      "–û–Ω –±—É–¥–µ—Ç –¥–ª—è –≤–∞—Å –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª–µ–º –≤ –ª—é–±–æ–π —Ç–æ—á–∫–µ –†–æ—Å—Å–∏–∏. "
                                      "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å —Å–∞–º–∏!", reply_markup=markup)


# ‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì‚Üì

# –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞ –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É —Å –∫–æ–Ω–æ–ø–∫ –≤ choose
@bot.callback_query_handler(func=lambda call: True)
def callback(call: types.CallbackQuery):
    if call.data == 'rand_route':  # —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏
        markup = types.InlineKeyboardMarkup(row_width=1)
        next = types.InlineKeyboardButton('‚Üí', callback_data='next1')
        markup.add(next)
        bot.send_message(call.message.chat.id, random.choice(variants), reply_markup=markup)

    if call.data == 'top10m':  # —Ç–æ–ø 10 –≥–æ—Ä–æ–¥–æ–≤
        markup = types.InlineKeyboardMarkup(row_width=1)
        next = types.InlineKeyboardButton('‚Üí', callback_data='next1')
        markup.add(next)
        bot.send_message(call.message.chat.id, top10, reply_markup=markup)

    # if call.data == 'next1':  # –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–¥–±–æ—Ä
    #             markup = types.InlineKeyboardMarkup(row_width=1)
    #             climate = types.InlineKeyboardButton('–£–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫–ª–∏–º–∞—Ç', callback_data='climate')
    #             zone = types.InlineKeyboardButton('–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –∑–æ–Ω–∞ –†–æ—Å—Å–∏–∏', callback_data='zone')
    #             budget = types.InlineKeyboardButton('–ë—é–¥–∂–µ—Ç', callback_data='budget')
    #             markup.add(climate, zone, budget)
    #             bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –∑–Ω–∞—á–∏–º—ã–µ –¥–ª—è –í–∞—Å –∫—Ä–∏—Ç–µ—Ä–∏–∏', reply_markup=markup)
    ####‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë
    if call.data == 'next1':
        markup = types.InlineKeyboardMarkup(row_width=1)
        k1 = types.InlineKeyboardButton('–°—É–±—Ç—Ä–æ–ø–∏—á–µ—Å–∫–∏–π:\n–∏—é–ª—å:+22, —è–Ω–≤–∞—Ä—å:+6', callback_data='k1')
        k2 = types.InlineKeyboardButton('–ú—É—Å—Å–æ–Ω–Ω—ã–π:\n–∏—é–ª—å:+16, —è–Ω–≤–∞—Ä—å:-16', callback_data='k2')
        k3 = types.InlineKeyboardButton('–†–µ–∑–∫–æ-–∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π:\n–∏—é–ª—å:+18, —è–Ω–≤–∞—Ä—å:-40', callback_data='k3')
        k4 = types.InlineKeyboardButton('–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π:\n–∏—é–ª—å:+18, —è–Ω–≤–∞—Ä—å:-20', callback_data='k4')
        k5 = types.InlineKeyboardButton('–£–º–µ—Ä–µ–Ω–Ω–æ-–∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π:\n–∏—é–ª—å:+18, —è–Ω–≤–∞—Ä—å:-10', callback_data='k5')
        k6 = types.InlineKeyboardButton('–°—É–±–∞—Ä–∫—Ç–∏—á–µ—Å–∫–∏–π:\n–∏—é–ª—å:+12, —è–Ω–≤–∞—Ä—å:-32', callback_data='k6')
        k7 = types.InlineKeyboardButton('–ê—Ä–∫—Ç–∏—á–µ—Å–∫–∏–π:\n–∏—é–ª—å:+6, —è–Ω–≤–∞—Ä—å:-28', callback_data='k7')
        next2 = types.InlineKeyboardButton('‚Üí', callback_data='next2')
        markup.add(k1, k2, k3, k4, k5, k6, k7, next2)
        bot.send_message(call.message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω', reply_markup=markup)
        #bot.send_message(call.message.chat.id, 'fvdv', reply_markup=next_button2())

    #–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    if call.data == 'next2':
        markup = types.InlineKeyboardMarkup(row_width=3)
        t1 = types.InlineKeyboardButton('-1 –æ—Ç –ú–°–ö', callback_data='t1')
        t2 = types.InlineKeyboardButton('0 –æ—Ç –ú–°–ö', callback_data='t2')
        t3 = types.InlineKeyboardButton('+1 –∫ –ú–°–ö', callback_data='t3')
        t4 = types.InlineKeyboardButton('+2 –∫ –ú–°–ö', callback_data='t4')
        t5 = types.InlineKeyboardButton('+3 –∫ –ú–°–ö', callback_data='t5')
        t6 = types.InlineKeyboardButton('+4 –∫ –ú–°–ö', callback_data='t6')
        t7 = types.InlineKeyboardButton('+5 –∫ –ú–°–ö', callback_data='t7')
        t8 = types.InlineKeyboardButton('+6 –∫ –ú–°–ö', callback_data='t8')
        t9 = types.InlineKeyboardButton('+7 –∫ –ú–°–ö', callback_data='t9')
        t10 = types.InlineKeyboardButton('+8 –∫ –ú–°–ö', callback_data='t10')
        t11 = types.InlineKeyboardButton('+9 –∫ –ú–°–ö', callback_data='t11')
        next3 = types.InlineKeyboardButton('‚Üí', callback_data='next3')
        markup.add(t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, next3)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:', reply_markup=markup)
        #bot.edit_message_text(call.message.chat.id, call.message.id, reply_markup=None)

    if call.data == 'next3':
        markup = types.InlineKeyboardMarkup(row_width=2)
        c1 = types.InlineKeyboardButton('–¥–æ 3000—Ä.', callback_data='—Å1')
        c2 = types.InlineKeyboardButton('–æ—Ç 3000—Ä. –¥–æ 5000—Ä.', callback_data='—Å2')
        c3 = types.InlineKeyboardButton('–æ—Ç 5000—Ä. –¥–æ 7000—Ä.', callback_data='—Å3')
        c4 = types.InlineKeyboardButton('–æ—Ç 7000 –¥–æ 10000—Ä.', callback_data='—Å4')
        c5=types.InlineKeyboardButton('–æ—Ç 10000 –¥–æ 13000—Ä.', callback_data='—Å5')
        c6=types.InlineKeyboardButton('–æ—Ç 13000 –¥–æ 16000—Ä.', callback_data='—Å6')
        c7= types.InlineKeyboardButton('–æ—Ç 16000 –¥–æ 19000—Ä.', callback_data='—Å7')
        c8 = types.InlineKeyboardButton('–æ—Ç 19000 –¥–æ 24000—Ä.', callback_data='—Å8')
        next4 = types.InlineKeyboardButton('‚Üí', callback_data='next4')

        markup.add(c1, c2, c3, c4, c5, c6, c7, c8, next4)
        bot.send_message(call.message.chat.id, '–ü–æ—Å–ª–µ–¥–Ω–∏–º —ç—Ç–∞–ø–æ–º –ø–æ–¥–±–æ—Ä–∞ –º–∞—Ä—à—Ä—É—Ç–∞ –±—É–¥–µ—Ç —Ä–∞—Å—á–µ—Ç –±—é–¥–∂–µ—Ç–∞:', reply_markup=markup)


def next_button2():
    markup = types.InlineKeyboardMarkup()
    next = types.InlineKeyboardButton('>', callback_data='next')
    markup.add(next)
    return markup


        ################# –ó–ê–î–ê–ù–ò–ï: –†–∞–∑–¥–µ–ª–∏—Ç—å next1 –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã, –ø–æ —Ç–∏–ø—É –£–ö–ê–ñ–ò–¢–ï –ü–û–î–•–û–î–Ø–©–ò–ô –ö–õ–ò–ú–ê–¢ –∏ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞,
        # –∑–∞—Ç–µ–º –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–æ–≤–æ–µ –æ–∫–Ω–æ —Å –∑–∞–≥–ª–∞–≤–∏–µ–º –¢–ï–†–†–ò–¢–û–†–ò–ê–õ–¨–ù–ê–Ø –ó–û–ù–ê....

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª Next, –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å –Ω–∞–≤–æ–¥—è—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ —Ç–∏–ø—É: –∫–∞–∫–æ–π –∫–ª–∏–º–∞—Ç, –∑–æ–Ω–∞ —Å—Ç—Ä–∞–Ω—ã, –±—é–¥–∂–µ—Ç
# –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ Next
def on_click_Next(call):
    if call.data == 'next1':
        markup = types.InlineKeyboardMarkup(row_width=1)
        # markup = types.InlineKeyboardMarkup(row_width=1)
        climate = types.InlineKeyboardButton('–ü–æ–¥—Ö–æ–¥—è—â–∏–π –∫–ª–∏–º–∞—Ç', callback_data='climate')
        zone = types.InlineKeyboardButton('–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–∞—è –∑–æ–Ω–∞ –†–æ—Å—Å–∏–∏', callback_data='zone')
        budget = types.InlineKeyboardButton('–ë—é–¥–∂–µ—Ç', callback_data='budget')
        markup.add(climate, zone, budget)
        bot.send_message(call.data.call.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', reply_markup=markup)

#‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë‚Üë

if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except any as e:
            print(e)
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True, interval=0)
